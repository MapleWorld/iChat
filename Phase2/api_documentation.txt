NOTES:
	- In general you should check for an optional JSON field
	  "message" in the response to see if there is anything.
	  If there is a message, it should be suitable for displaying
	  do the user to explain an error.

/login
	- Start a session and retrieve the ID
	- Only accepts a POST with credentials provided
	- Parameters are "username" and "password"
	Example:

		POST /login
		
		{"username":"myname","password":"mypass"}

	Example of successful login response:
		HTTP 200 OK
		{"success":true, "SESSIONID":"ABCDEF123456", "admin":false}

	Example of admin login:
		HTTP 200 OK
		{"success":true, "SESSIONID":ABCDEF123456", "admin":true}

	Unsuccessful login:
		HTTP 401 unauthorized
		{"success":false, "SESSIONID":null}

/register
	- Register a new account
	- Only accepts a POST request

	Example:
	POST /register
	
	{"username":"myname", "password":"mypass"}

	Example of successful registration:
	HTTP 200 OK
	
	{"success":true,"SESSIONID":"ABCDEF123456"}

	Example of failed registration:
	HTTP 400 bad request
	
	{"success":false, "SESSIONID":null}

/logout
	- Invalidate an active session
	- A valid session ID is required for this to work
	- Session ID must be provided as an HTTP header

	Example request:
	POST /logout
	SESSIONID: ABCDEF123456

	Example successful response:
	HTTP 200 OK

	{"success":true}

/categories
	- Get a list of all categories
	- No authentication required
	- Categories are listed in alphabetical order by name

	GET /categories

	Example of category reponse from server:
		HTTP 200 OK

		{"categories":[{"name":"name1","id":1},
				{"name":"name2","id":2},
				{"name":"name3","id":3}]}

/categories/create
	- Create a new category
	- SESSIONID required
	- Admin only
	- POST request

	Example request to create a category:
		POST /categories/create
		SESSIONID: ABCDEF123456

		{"name":"Category500"}

	Example successful response:
		HTTP 200 OK

		{"success":true, "message":"Category created", "cat_id":10}

	Example failure response (invalid or duplicate name):
		HTTP 400

		{"success":false, "message":"Error creating category from provided name"}

/topics/list/{category_id}

	- Get a list of all topics within a given category
	- No authentication required
	- Topics are listed in alphabetical order by name

	Example request:
		GET /topics/1

	Example successful response:

		HTTP 200 OK
		
		{"topics":[{"name":"name1", "id":1},
				{"name":"name2", "id":2},
				{"name":"name3", "id":3}]}

	Example response if category ID is invalid:
		HTTP 400 bad request

	Example response if no threads in topic:
		{"topics":null}

/topics/create
	- Create a new topic within a category
	- Must be a POST request
	- Must have a valid session

	Example POST to create a new topic:

		POST /topics/create/
		SESSIONID: ABCDEF123456

		{"category":1, "name":"NameOfTopic"}

	Example success response:
		HTTP 200 OK

		{"success":true,"message":"Message from server"}

	Example failure message:
		HTTP 400 bad request

		{"success":false, "message":"Message from server"}

	Example unauthorized response (no response body sent):
		HTTP 401 unauthorized

/topics/subscribe
	- Subscribe to a topic
	- Must be a POST
	- Must have a valid session

	Example POST to subscribe:

		POST /topics/subscribe/
		SESSIONID: ABCDEF123456
	
		{"topic_id":1}

	Example of successful subscription response:
		HTTP 200 OK

		{"success":true, "message":"Message from server"}

	Example of failure to subscribe:
		HTTP 400 bad request

		{"success":false, "message":"Message from server"}

	Example unauthorized response (no response body sent):
		HTTP 401 unauthorized

/topics/unsubscribe
	- Unsubscribe from a topic
	- Must be a POST
	- Must have a valid session

	Example POST to unsubscribe:

		POST /topics/unsubscribe/
		SESSIONID: ABCDEF123456
	
		{"topic_id":1}

	Example of successful response:
		HTTP 200 OK

		{"success":true, "message":"Message from server"}

	Example of failure to subscribe:
		HTTP 400 bad request

		{"success":false, "message":"Message from server"}

	Example unauthorized response (no response body sent):
		HTTP 401 unauthorized

/topics/subscriptions
	- List topics that this user is subscribed to
	- Must have a valid session
	- List of topics are displayed in alphabetical order by name

	Example request:
		GET /topics/subscriptions/
		SESSIONID: ABCDEF123456

	Example successful response:
		HTTP 200 OK
		
		{"topics":[
			{"name":"topic1", "id":50},
			{"name":"topic3", "id":15},
			{"name":"topic4", "id":30}
			]
		}

/topics/delete/{topic_id}
	- Delete an existing topic
	- Admin only
	- POST request
	- SESSIONID is required
	- Must remove topic association from threads

	Example request to delete a topic (empty request body):
		POST /topics/delete/1
		SESSIONID: ABCDEF123456
	
	Example successful response:
		HTTP 200 OK

		{"success":true, "message":"Topic deleted"}

	Example failure response (bad thread id):
		HTTP 400 BAD REQUEST

		{"success":false, "message":"Bad topic ID"}

	Example unauthorized response:
		HTTP 401 unauthorized

		{"success":false, "message":"Unauthorized"}



/threads/by_category/{category_id}/{page_number}

	- Get a list of all threads within a given category
	- No authentication required

	Example request:
		GET /threads/by_category/1/1

	Example successful response (threads are returned in order by update timestamp):
		HTTP 200 OK

		{"pages":10,
		"this_page":1,
		"threads":[
			{"id":3,"title":"This is a title","update_timestamp":"2014-10-10 17:22:15"},
			{"id":1,"title":"This title 2","update_timestamp":"2014-10-10 01:21:15"},
			{"id":2,"title":"Title 3","update_timestamp":"2014-04-23 17:42:10"}]}

	Example response for bad category ID
		HTTP 400 bad request

	Example response for empty page (no threads in category):

		{"pages":0, "this_page":0, "threads":null}

/threads/by_topic/{topic_id}/{page_number}

	- Get a list of all threads tagged with a given topic ID
	- Get a page worth at a time (page size to be determined later)
	- No authentication required

	Example request:
		GET /threads/by_topic/1/1

	Example successful response (threads are returned in order by update timestamp):

	{"threads":[
			{"id":3,"title":"This is a title","update_timestamp":"2014-10-10 17:22:15"},
			{"id":1,"title":"This title 2","update_timestamp":"2014-10-10 01:21:15"},
			{"id":2,"title":"Title 3","update_timestamp":"2014-04-23 17:42:10"}]}

	Example response for bad/invalid topic ID
		HTTP 400 bad request

	Example response for empty page (no threads tagged with topic):

		{"pages":0, "this_page":0, "threads":null}
		
/threads/view/{thread_id}/{page_number}

	- Get the contents of a single thread, original post plus replies on the page
	- Replies are sorted in order of timestamp, oldest first
	- No authentication required
	
	Example request:
		GET /threads/view/1/1

	Example response for first page:
		HTTP 200 OK

		{"pages":5,
		"this_page":1,
		"title":"This is a title", 
		"username":"user1", 
		"body":"Body of original post", 
		"timestamp":"2014-01-01 00:00:00",
		"topics": [
			{"name":"topicName", "id":1},
			{"name":"topic2", "id":64}
			],
		"replies":[
			{"username":"user_r1", "body":"body of a reply", "timestamp":"2014-01-02 00:01:01"},
			{"username":"user_r2", "body":"body of a reply", "timestamp":"2014-01-03 00:01:01"},
			{"username":"user_r1", "body":"body of a reply", "timestamp":"2014-01-03 00:13:01"}
			]
		}


	Example response for a later page:

		{"pages":5,
		"this_page":3,
		"title":"This is a title", 
		"username":null, 
		"body":null, 
		"timestamp":null,
		"topics": [
			{"name":"topicName", "id":1},
			{"name":"topic2", "id":64}
			],
		"replies": [
			{"username":"user_r1", "body":"body of a reply", "timestamp":"2014-01-02 00:01:01"},
			{"username":"user_r2", "body":"body of a reply", "timestamp":"2014-01-03 00:01:01"},
			{"username":"user_r1", "body":"body of a reply", "timestamp":"2014-01-03 00:13:01"}
			]
		}



/threads/new
	- Creates a new thread
	- Only POST requests are allowed
	- A valid session is required
	- ADMIN ONLY: can be marked as sticky

	Example request to create a new thread:

		POST /threads/new/
		SESSIONID: ABCDEF123456

		{"category":1,
		"title":"thread title", 
		"body":"thread body",
		"topic_ids":[1,2,6,5]
		}

	Example to create a sticky thread:
		POST /threads/new
		SESSIONID: ABCDEF123456

		{"category":1,
		"title":"thread title", 
		"body":"thread body",
		"topic_ids":[1,2,6,5],
		"sticky":true
		}

	Example success response:
		HTTP 200 OK
		
		{"success":true,"message":"Message from server"}

	Example failure response:
		HTTP 400 bad request

		{"success":false, "message": "Message from server"}

	Example unauthorized response (no response body sent):
		HTTP 401 unauthorized
	

/threads/reply
	- Replies to an existing thread
	- Only POST requests are allowed
	- A valid session is required

	Example request to create a reply:

		POST /threads/reply/
		SESSIONID: ABCDEF123456

		{"thread_id":1,"body":"body of reply"}

	Example success response:
		HTTP 200 OK
		
		{"success":true,"message":"Message from server"}

	Example failure response:
		HTTP 400 bad request

		{"success":false, "message": "Message from server"}

	Example unauthorized response (no response body sent):
		HTTP 401 unauthorized

/threads/edit/{thread_id}

	- Optionally edit the body of an existing thread
	- Optionally change topics of thread
	- Must be a POST
	- Must have SESSIONID
	- SESSIONID -> user must match original author

	Example request to edit body:

		POST /threads/edit/1
		SESSIONID: ABCDEF123456

		{"body":"Edited reply body"}

	Example request to change topics (topics set to array provided):

		POST /threads/edit/1
		SESSIONID: ABCDEF123456

		{"topic_ids":[1,3,5]}

	Example request to change body and topics:

		POST /threads/edit/1
		SESSIONID: ABCDEF123456

		{"body":"Edited reply body", "topic_ids":[1,3,5]}

	Example successful response:
		HTTP 200 OK
		
		{"success":true, "message":"Thread successfully edited"}

	Example bad request:
		HTTP 400 BAD REQUEST

		{"success":false", "message":"Bad request"}

	Example unauthorized (SESSIONID mismatch or not present):
		HTTP 401 unauthorized

		{"success":false, "message":"Unauthorized"}

/threads/reply/edit/{reply_id}
	- Edit an existing reply body
	- POST request
	- SESSIONID is required
	- SESSIONID -> user must match reply author

	Example request to edit reply:

		POST /threads/reply/edit/1
		SESSIONID: ABCDEF123456

		{"body":"Edited reply body"}

	Example successful response:
		HTTP 200 OK

		{"success":true, "message":"Reply edited successfully"}

	Example failure message:
		HTTP 400 BAD REQUEST

		{"success":false, "message":"Bad request"}

	Example unauthorized response:
		HTTP 401 unauthorized

		{"success":false, "message":"Unauthorized"}


/threads/delete/{thread_id}
	- Delete an existing thread
	- Admin only
	- POST request
	- SESSIONID is required

	Example request to delete a thread (empty request body):
		POST /threads/delete/1
		SESSIONID: ABCDEF123456
	
	Example successful response:
		HTTP 200 OK

		{"success":true, "message":"Thread deleted"}

	Example failure response (bad thread id):
		HTTP 400 BAD REQUEST

		{"success":false, "message":"Bad thread ID"}

	Example unauthorized response:
		HTTP 401 unauthorized

		{"success":false, "message":"Unauthorized"}

/threads/reply/delete/{reply_id}
	- Delete an existing reply
	- Admin only
	- POST request
	- SESSIONID is required

	Example request to delete a reply (empty request body):
		POST /threads/reply/delete/1
		SESSIONID: ABCDEF123456
	
	Example successful response:
		HTTP 200 OK

		{"success":true, "message":"Reply deleted"}

	Example failure response (bad thread id):
		HTTP 400 BAD REQUEST

		{"success":false, "message":"Bad reply ID"}

	Example unauthorized response:
		HTTP 401 unauthorized

		{"success":false, "message":"Unauthorized"}


/users/ban/{user_id}
	- Ban an existing user
	- Admin only
	- POST request
	- SESSIONID is required 
	
	Example request to ban a user (empty request body):
		POST /users/ban/1
		SESSIONID: ABCDEF123456

	Example successful response:
		HTTP 200 OK

		{"success":true, "message":"User has been banned"}

	Example failure response (bad user ID):
		HTTP 400 bad request

		{"success":false, "message":"Bad user ID"}

	Example unauthorized response:
		HTTP 401 unauthorized

		{"success":false, "message":"Unauthorized"}


/pm/inbox/{page_number}
	- List messages in inbox, by page number
	- GET request
	- SESSIONID required

	Example request:
		GET /pm/inbox/1
		SESSIONID: ABCDEF123456

	Example successful response:

		{
		"messages":[
			{
			"msg_id":1234543,
			"username":"a name",
			"subject":"Subject text",
			"datetime": "2014-01-01 15:12:35",
			"unread":true
			},
			{
			"msg_id":45453223,
			"username":"some name",
			"subject":"something",
			"datetime":"2013-12-21 10:11:12",
			"unread":false
			}
		],
		"this_page":1,
		"pages":5
		}
		
/pm/view/{message_id}
	- View a private message
	- GET request
	- SESSIONID required
	- SESSIONID->userid must match owner of message, or recipient
	- Message gets marked unread=false if the recipient views it
	- If the sender views it, no change is made

	Example request:
		GET /pm/view/1
		SESSIONID: ABCDEF123456

	Example successful response:
		HTTP 200 OK

		{
		"pm": {
			"msg_id":1,
			"userid_from":100,
			"username_from":"someone",
			"userid_to":125,
			"username_to":"my name",
			"subject":"Subject text",
			"datetime":"2014-01-01 15:12:35",
			"msg_body":"Body text here"
			}
		}
		
	Example for non-existant message:
		HTTP 200 OK
		
		{"pm":null, "success":false, "message":"Message does not exist"}

/pm/sent/{page_number}
	- View sent private messages
	- GET request
	- SESSIONID required

	Example request to list sent messages:
		GET /pm/sent/1
		SESSIONID: ABCDEF123456

		{
		"messages":[
			{
			"msg_id":1234543,
			"username":"a name",
			"subject":"Subject text",
			"datetime": "2014-01-01 15:12:35"
			},
			{
			"msg_id":45453223,
			"username":"some name",
			"subject":"something",
			"datetime":"2013-12-21 10:11:12"
			}
		],
		"this_page":1,
		"pages":10
		}

/pm/send
	- Send a new private message
	- POST request
	- SESSIONID required

	Example request to send a message:
		POST /pm/send
		SESSIONID: ABCDEF123456

		{
		"userid_to":1,
		"subject":"Subject text",
		"body":"Message body"
		}

/contacts/list/{page_number}
	- GET request
	- SESSIONID required
	- List of contacts by page, ordered by username alphabetically

	Example request:
		GET /contacts/list/1
		SESSIONID: ABCDEF123456

	Example response:

	{
	"contacts":[
		{
		"userid":5,
		"username":"a name"
		},
		{
		"userid":2,
		"username":"some name"
		}
	]
	}	

/contacts/add
	- Add a new contact
	- POST request
	- SESSIONID required

	Example request:
		POST /contacts/add
		SESSIONID: ABCDEF123456

		{"userid":1}

	Example response:
		HTTP 200 OK

		{"success":true, "message":"Contact added"}

/contacts/delete/{user_id}
	- Delete a contact
	- POST request
	- SESSIONID required

	Example request (no request body):
		POST /contacts/delete/140
		SESSIONID: ABCDEF123456

	Example response:
		HTTP 200 OK

		{"success":true, "message":"Contact deleted"}
